<%- include("../partials/user/header.ejs")%>
<style>
  #body {
    font-family: "Arial", sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 20px;
  }

  .container-box {
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
  }

  h2 {
    text-align: center;
    font-size: 24px;
    color: #333;
    margin-bottom: 20px;
  }

  label {
    font-size: 16px;
    color: #555;
    display: block;
    margin-bottom: 10px;
  }

  select {
    width: 100%;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
    font-size: 16px;
    background-color: #f9f9f9;
    margin-bottom: 20px;
    transition: border-color 0.3s ease;
  }

  select:focus {
    border-color: #007bff;
    outline: none;
  }
  #fname:focus {
    border-color: #007bff;
    outline: none;
  }
  #email:focus {
    border-color: #007bff;
    outline: none;
  }

  .btn-primary {
    display: inline-block;
    padding: 10px 30px;
    font-size: 16px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    text-align: center;
  }

  .btn-primary:hover {
    background-color: #0056b3;
  }

  .btn-primary a {
    text-decoration: none;
    color: white;
    display: block;
  }

  .btn-container {
    text-align: center;
  }

  /* Media queries for mobile responsiveness */
  @media (max-width: 768px) {
    .container {
      padding: 15px;
    }

    h2 {
      font-size: 22px;
    }

    select {
      font-size: 14px;
    }

    .btn-primary {
      font-size: 14px;
      padding: 8px 15px;
    }
  }

  @media (max-width: 480px) {
    .container {
      padding: 10px;
    }

    h2 {
      font-size: 20px;
    }

    .btn-primary {
      font-size: 12px;
      padding: 6px 12px;
    }
  }
  /* Coupon Section */
  .coupon-container label {
    font-size: 16px;
    font-weight: 500;
    margin-bottom: 10px;
    display: block;
    color: #333;
  }

  .coupon-container select {
    width: 100%;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ddd;
    margin-bottom: 10px;
  }

  .coupon-container .btn-success {
    background-color: #28a745;
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
  }

  .coupon-container .btn-success:hover {
    background-color: #218838;
  }

  .coupon-container .btn-danger {
    background-color: #dc3545;
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 10px;
  }

  .coupon-container .btn-danger:hover {
    background-color: #c82333;
  }

  .coupon-container p {
    font-size: 14px;
    margin-top: 10px;
  }

  .container-box {
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
  }

  h3 {
    font-family: "Roboto", sans-serif;
    margin-bottom: 20px;
  }

  input[type="text"] {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
  }

  label {
    display: block;
    font-size: 14px;
    color: #333;
  }

  .btn {
    background-color: #4caf50;
    color: white;
    padding: 12px;
    width: 100%;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    border: none;
    transition: background-color 0.3s ease;
  }

  .btn:hover {
    background-color: #45a049;
  }

  .toast {
    visibility: hidden;
    min-width: 250px;
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 16px;
    position: fixed;
    z-index: 1;
    left: 50%;
    bottom: 30px;
    font-size: 17px;
    border-radius: 5px;
    transform: translateX(-50%);
  }

  .toast.show {
    visibility: visible;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
  }

  @keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }
    to {
      bottom: 30px;
      opacity: 1;
    }
  }

  @keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }
    to {
      bottom: 0;
      opacity: 0;
    }
  }

  .toast {
    visibility: hidden;
    min-width: 250px;
    margin-left: -125px;
    color: white;
    text-align: center;
    border-radius: 2px;
    padding: 16px;
    position: fixed;
    z-index: 1;
    left: 50%;
    bottom: 30px;
    font-size: 17px;
  }

  /* Show the toast */
  .toast.show {
    visibility: visible;
    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
  }
  /* Order Summary */
  .order-summary h2 {
    font-size: 22px;
    margin-bottom: 15px;
  }

  .order-summary .item {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
  }

  .order-summary .total {
    font-weight: bold;
    font-size: 18px;
    padding-top: 10px;
    border-top: 1px solid #ddd;
    margin-top: 10px;
  }

  /* Animations */
  @-webkit-keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }
    to {
      bottom: 30px;
      opacity: 1;
    }
  }

  @-webkit-keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }
    to {
      bottom: 0;
      opacity: 0;
    }
  }

  @keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }
    to {
      bottom: 30px;
      opacity: 1;
    }
  }

  @keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }
    to {
      bottom: 0;
      opacity: 0;
    }
  }

  .zoom {
    position: absolute;
    border: 1px solid #000;
    width: 100px; /* Adjust size */
    height: 100px; /* Adjust size */
    background-repeat: no-repeat;
    background-size: 200%; /* Adjust to control zoom level */
    pointer-events: none;
    visibility: hidden;
  }
</style>
<div id="body">
  <div class="row">
    <div class="col-75">
      <div class="container-box">
        <form id="checkoutForm">
          <div class="row">
            <!-- Billing Details -->
            <div class="col-50">
              <div class="col-50">
                <div class="container">
                  <h2>Select Delivery Address</h2>
                  <form id="checkout-form" method="POST" action="/checkout">
                    <div>
                      <label for="address">Select Address:</label>
                      <select name="address" id="address">
                        <% addresses.forEach(function(address) { %>
                        <option
                          value="<%= address._id %>"
                          data-street="<%= address.street %>"
                          data-city="<%= address.city %>"
                          data-state="<%= address.state %>"
                          data-postalcode="<%= address.postalCode %>"
                          data-phone="<%= address.phoneNumber %>"
                          data-country="<%= address.country %>"
                        >
                          <%= address.street %>, <%= address.city %>, <%=
                          address.state %>, <%= address.postalCode %>
                        </option>
                        <% }) %>
                      </select>
                      <button
                        class="btn-primary p-1"
                        style="
                          border: radius 50px;
                          align-items: center;
                          align-content: center;
                        "
                      >
                        <a
                          style="text-decoration: none; color: white"
                          href="/addressManagement?check=true"
                          >Add new address</a
                        >
                      </button>
                    </div>
                  </form>
                </div>
                <!-- Address Form Fields -->
                <label for="fname"><i class="fa fa-user"></i> Full Name</label>
                <span class="error" id="error1"></span>
                <input
                  type="text"
                  id="fname"
                  name="fname"
                  value="<%= (userDetails.firstName && userDetails.lastName) ? (userDetails.firstName + ' ' + userDetails.lastName) : userDetails.username %>"
                />
                <label for="email"><i class="fa fa-envelope"></i> Email</label>
                <span class="error" id="error2"></span>
                <input
                  type="text"
                  id="email"
                  name="email"
                  value="<%= userDetails.email %>"
                />
                <!-- Add other form fields as necessary -->
              </div>

              <!-- Payment Mode Selection -->
              <div class="col-50">
                <h3>Payment</h3>
                <label for="payment-mode">Select Payment Mode:</label>
                <select id="payment-mode" name="payment-mode">
                  <option value="">Select a Payment Mode</option>
                  <option value="razorpay">Razorpay</option>
                  <%if(total<=1000){%>
                  <option value="cod">Cash On Delivery</option>
                  <%}%>
                </select>
                <!-- Payment Details (Shown for Razorpay) -->
                <div id="paymentDetails" style="display: none">
                  <label for="fname">Accepted Cards via Razorpay</label>
                  <div class="icon-container">
                    <i class="fa fa-cc-visa" style="color: navy"></i>
                    <i class="fa fa-cc-mastercard" style="color: red"></i>
                    <i class="fa fa-cc-amex" style="color: blue"></i>
                    <i class="fa fa-cc-discover" style="color: orange"></i>
                  </div>
                </div>
              </div>
            </div>
            <div class="container-box">
              <table>
                <tr>
                  <td>
                    <span class="price" style="color: black">
                      <i class="fa fa-shopping-cart"></i>
                    </span>
                  </td>

                  <td><%=products.length%></td>
                </tr>
                <%products.forEach(product=>{%>
                <tr>
                  <td><%=product.name%> <%=product.platform%></td>

                  <td>
                    <span class="price"><%=product.price%></span>
                    <span>X</span>
                    <span class="price"><%=product.quantity%> </span>
                  </td>
                </tr>
                <%})%>
              </table>

              <div class="coupon-container">
                <label for="coupon">Apply Coupon:</label>
                <form id="applyCouponForm" action="/applyCoupon" method="POST">
                  <select id="coupon" name="couponId">
                    <option value="">Select a coupon</option>
                    <% eligibleCoupons.forEach(function(coupon) { %>
                    <option value="<%= coupon._id %>">
                      <%= coupon.code %> - <% if (coupon.discountType ===
                      'fixed') { %> ₹<%= coupon.discountValue %> <% } else { %>
                      <%= coupon.discountValue %>% <% } %>
                    </option>
                    <% }) %>
                  </select>
                  <button class="btn-success" type="submit">
                    Apply Coupon
                  </button>
                  <% if (typeof appliedCoupon!=='undefined') { %>
                  <p>Coupon Applied: <%= appliedCoupon.code %></p>
                  <button
                    class="btn-danger"
                    type="submit"
                    form="removeCouponForm"
                  >
                    Remove Coupon
                  </button>
                  <% } %>
                </form>
                <!-- Hidden form for removing coupon -->
                <form
                  id="removeCouponForm"
                  action="/removeCoupon"
                  method="POST"
                ></form>
              </div>

              <table>
                <tr>
                  <td>Subtotal</td>
                  <td><%=subtotal%></td>
                </tr>
                <tr>
                  <td>Delivery</td>
                  <td>
                    <span class="price" style="color: black" id="delivery"
                      ><%=delivery%></span
                    >
                  </td>
                </tr>
                <tr>
                  <td>
                    <p>Tax</p>
                  </td>
                  <td>
                    <span class="price" style="color: black"
                      ><b id="tax"><%=tax%></b></span
                    >
                  </td>
                </tr>

                <% if (typeof appliedCoupon!=="undefined") { %>
                <tr>
                  <td>Coupon Applied: <%= appliedCoupon.code %></td>
                  <span hidden id="couponCode"><%=appliedCoupon._id%></span>
                  <td>
                    (<% if (appliedCoupon.discountType === 'fixed') { %> -₹<%=
                    appliedCoupon.discountValue %> <% } else { %> <%=
                    appliedCoupon.discountValue %>% Off <% } %>)
                  </td>
                </tr>

                <% } %> <% if (typeof reducedAmount!=="undefined") { %>
                <tr>
                  <td>Amount Saved:</td>
                  <td>
                    <span id="reducedAmount"><%=reducedAmount%></span>
                  </td>
                </tr>

                <% } %>
                <tr>
                  <td>
                    <p>Total</p>
                  </td>
                  <td>
                    <span class="price" style="color: black"
                      ><b id="totalPrice"><%=total%></b></span
                    >
                  </td>
                </tr>
              </table>
            </div>
          </div>
          <label>
            <input type="checkbox" checked="checked" name="sameadr" /> Shipping
            address same as billing
          </label>
          <button type="submit" class="btn" id="submitLink">
            Proceed to order
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<div id="toast" class="toast"></div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
  // for toast
  function showToast(data, result) {
    // toast.className.replace("show","");
    const toast = document.getElementById("toast");
    toast.className = "toast show";
    toast.innerHTML = data;
    if (result) {
      toast.style.backgroundColor = "#4CAF50";
    } else {
      toast.style.backgroundColor = "red";
    }
    setTimeout(() => {
      toast.className = toast.className.replace("show", "");
    }, 3000); // The toast will disappear after 3 seconds
  }

  document
    .getElementById("payment-mode")
    .addEventListener("change", function () {
      const paymentDetails = document.getElementById("paymentDetails");
      if (this.value === "razorpay") {
        paymentDetails.style.display = "block";
      } else {
        paymentDetails.style.display = "none";
      }
    });

  // Function to display error messages
  function displayError(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.color = "red";
  }

  // Function to clear previous errors
  function clearErrors() {
    const errorFields = document.querySelectorAll(".error");
    errorFields.forEach(function (errorField) {
      errorField.innerText = ""; // Clear error text
    });
  }

  document.addEventListener("DOMContentLoaded", function () {
    const addressSelect = document.getElementById("address");

    // Get form fields
    const emailField = document.getElementById("email");
    const nameField = document.getElementById("fname");
    const priceField = document.getElementById("totalPrice");
    const reducedAmountField = document.getElementById("reducedAmount");
    const couponidField = document.getElementById("couponCode");
    // const addressField = document.getElementById("address")
    const paymentMode = document.getElementById("payment-mode");

    addressSelect.addEventListener("change", function () {
      // Get selected option's dataset values
      const selectedOption = addressSelect.options[addressSelect.selectedIndex];

      const street = selectedOption.getAttribute("data-street");
      const city = selectedOption.getAttribute("data-city");
      const state = selectedOption.getAttribute("data-state");
      const postalCode = selectedOption.getAttribute("data-postalcode");
      const phone = selectedOption.getAttribute("data-phone");
      const country = selectedOption.getAttribute("data-country");
    });

    const submitLink = document.getElementById("submitLink");

    submitLink.addEventListener("click", async (event) => {
      event.preventDefault();

      //for validation

      const error1 = document.getElementById("error1");
      const error2 = document.getElementById("error2");

      const emailVal = emailField.value;
      const nameVal = nameField.value;
      const priceVal = priceField.innerHTML;
      const reducedPriceVal = reducedAmountField?.innerHTML;
      const couponCode = couponidField?.innerHTML;
      // const addressVal = addressField.value
      const paymentVal = paymentMode.value;
      const nameRegex = /^[A-Za-z\s]+$/;
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      const phoneRegex = /^\d{10}$/;

      let isValid = true;

      // Validate Full Name
      if (!nameRegex.test(nameVal)) {
        displayError(
          "error1",
          "Full Name should only contain letters and spaces."
        );
        isValid = false;
      }

      // Validate Email
      if (!emailRegex.test(emailVal)) {
        displayError("error2", "Please enter a valid email.");
        isValid = false;
      }
      if (paymentVal === "") {
        showToast("Please Select A Payment Mode", 0);
        isValid = false;
      }
      // Validate Street Address

      if (!isValid) {
        return; // If validation fails, stop further processing (i.e., prevent fetch)
      }
      const addressField = document.getElementById("address");
      const addressid = addressField.value;
      try {
        const response = await fetch(`/checkout`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            paymentMode: paymentVal,
            reducedAmount: parseInt(reducedPriceVal),
            totalPrice: parseInt(priceVal),
            address: addressid,
            fname: nameVal, // Sending fname (full name)
            couponCode: couponCode,
          }),
        });
        const data = await response.json();
        if (paymentVal === "cod" && response.ok) {
          showToast("Order Placed", 1);
          setTimeout(() => {
            window.location.href = "/orderSuccess";
          }, 2000);
        } else if (paymentVal === "razorpay" && data.razorpayOrderId) {
          const options = {
            key: data.razorpayKeyId,
            amount: data.amount,
            currency: "INR",
            name: "The Game Shop",
            description: "Test Transaction",
            order_id: data.razorpayOrderId,
            handler: async function (response) {
              try {
                const verifyResponse = await fetch("/verifyPayment", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature,
                    orderId: data.orderId, // Your backend order ID
                  }),
                });
                const verifyData = await verifyResponse.json();
                console.log(verifyData);

                if (verifyData.success) {
                  showToast("Payment Successfull, Order Placed", 1);
                  setTimeout(() => {
                    window.location.href = `/orderSuccess?orderId=${data.orderId}`;
                  }, 2000);
                } else {
                  alert("Payment Verification failed, Please try again");
                  window.location.href = `/paymentFailed?orderId=${data.orderId}`
                }
              } catch (error) {
                console.error("Error verifying payment:", error.message);
                alert("Error verifying payment. Please try again.");
              }
            },
            modal: {
              ondismiss: function () {
                // This triggers when the user closes the Razorpay modal (before payment)
                window.location.href = `/paymentFailed?orderId=${data.orderId}`; // Redirect to cancellation page
              },
            },
            prefill: {
              name: data.name,
              email: data.email,
            },
            theme: {
              color: "#3399cc",
            },
          };

          const rzp = new Razorpay(options);
          rzp.open();
        } else {
          // Handle any other errors
          alert(data.message || "Something went wrong");
        }
      } catch (error) {
        alert(error.message);
        console.error(error.message);
      }
    });
  });
</script>

<%- include("../partials/user/footer.ejs")%>
