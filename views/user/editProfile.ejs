<%- include("../partials/user/header.ejs") %>

<style>
  /* Toast notification styles */
  .toast {
    visibility: hidden;
    min-width: 250px;
    margin-left: -125px;
    color: white;
    text-align: center;
    border-radius: 2px;
    padding: 16px;
    position: fixed;
    z-index: 1;
    left: 50%;
    bottom: 30px;
    font-size: 17px;
  }
  /* Show the toast */
  .toast.show {
    visibility: visible;
    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
  }
  /* Animations */
  @-webkit-keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }
    to {
      bottom: 30px;
      opacity: 1;
    }
  }
  @-webkit-keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }
    to {
      bottom: 0;
      opacity: 0;
    }
  }
  @keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }
    to {
      bottom: 30px;
      opacity: 1;
    }
  }
  @keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }
    to {
      bottom: 0;
      opacity: 0;
    }
  }
  .zoom {
    position: absolute;
    border: 1px solid #000;
    width: 100px; /* Adjust size */
    height: 100px; /* Adjust size */
    background-repeat: no-repeat;
    background-size: 200%; /* Adjust to control zoom level */
    pointer-events: none;
    visibility: hidden;
  }
  .body-userprofile {
    background: white;
}

.emp-profile {
    padding: 3%;
    margin-top: 3%;
    margin-bottom: 3%;
    border-radius: 0.5rem;
    background: #fff;
}

.profile-img {
    text-align: center;
}

.profile-img img {
    width: 70%;
    height: 100%;
}

.profile-img .file {
    position: relative;
    overflow: hidden;
    margin-top: -20%;
    width: 70%;
    border: none;
    border-radius: 0;
    font-size: 15px;
    background: #212529b8;
    color: white;
}

.profile-img .file input {
    position: absolute;
    opacity: 0;
    right: 0;
    top: 0;
}

.profile-head h5 {
    color: #333;
    font-weight: 600;
    margin-bottom: 20px;
}

.profile-edit-btn {
    border: none;
    border-radius: 1.5rem;
    width: 40%;
    padding: 2%;
    font-weight: 600;
    color: white;
    background-color: #0062cc;
    cursor: pointer;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    font-weight: 600;
    color: #333;
}

.form-control {
    border-radius: 0.5rem;
    padding: 10px;
    width: 100%;
    border: 1px solid #ced4da;
}

.error {
    color: red;
    font-size: 12px;
}

.toast {
    display: none;
    position: fixed;
    bottom: 10px;
    right: 10px;
    background-color: #333;
    color: white;
    padding: 10px;
    border-radius: 5px;
}

</style>
<div class="body-userprofile">
  <div class="container emp-profile">
    <form id="editProfileForm" action="/user/edit-profile" method="POST">
      <div class="row">
        <div class="col-md-4">
          <div class="profile-img">
            <img src="/images/dummy-avatar.png" alt="Profile Image" />
            <!-- <div class="file btn btn-lg btn-primary">Change Photo
              <input type="file" name="file" />
            </div> -->
          </div>
        </div>

        <div class="col-md-8">
          <div class="profile-head">
            <h5>Edit Profile</h5>
            <div class="form-group">
              <label for="username">Username</label>
              <input type="text" class="form-control" id="username" name="username" value="<%=userDetails.username%>" required />
              <span id="error1" class="error"></span>
            </div>

            <div class="form-group">
              <label for="phoneNumber">Phone Number</label>
              <input type="text" class="form-control" id="phoneNumber" name="phoneNumber" value="<%=userDetails.phoneNumber%>" />
              <span id="error3" class="error"></span>
            </div>

            <div class="form-group">
              <label for="firstName">First Name</label>
              <input type="text" class="form-control" id="firstName" name="firstName" value="<%=userDetails.firstName%>" />
              <span id="error4" class="error"></span>
            </div>

            <div class="form-group">
              <label for="lastName">Last Name</label>
              <input type="text" class="form-control" id="lastName" name="lastName" value="<%=userDetails.lastName%>" />
              <span id="error5" class="error"></span>
            </div>

            <button type="submit" class="profile-edit-btn">Save Changes</button>
          </div>
        </div>
      </div>
      <div id="toast" class="toast"></div>
    </form>
  </div>
</div>


<script>
  function showToast(data, result) {
    // toast.className.replace("show","");
    const toast = document.getElementById("toast");
    toast.className = "toast show";
    toast.innerHTML = data;
    if (result) {
      toast.style.backgroundColor = "#4CAF50";
    } else {
      toast.style.backgroundColor = "red";
    }
    setTimeout(() => {
      toast.className = toast.className.replace("show", "");
    }, 3000); // The toast will disappear after 3 seconds
  }
  document.addEventListener("DOMContentLoaded", function () {
  document
    .getElementById("editProfileForm")
    .addEventListener("submit", function (event) {
      console.log("Form submission initiated");

      event.preventDefault(); // Prevent the form's default submission behavior

      // Clear previous error messages
      document.getElementById("error1").textContent = "";
      document.getElementById("error3").textContent = "";
      document.getElementById("error4").textContent = "";
      document.getElementById("error5").textContent = "";

      // Collect form inputs
      const username = document.getElementById("username").value.trim();
      const phoneNumber = document.getElementById("phoneNumber").value.trim();
      const firstName = document.getElementById("firstName").value.trim();
      const lastName = document.getElementById("lastName").value.trim();

      let isValid = true; // Flag to track if all fields are valid

      // Validate Username: Only alphabets and spaces allowed
      const usernameRegex = /^[A-Za-z\s]+$/;
      if (!usernameRegex.test(username)) {
        document.getElementById("error1").textContent =
          "Username should only contain alphabets and spaces.";
        isValid = false;
      }

      // Validate Phone Number: Must be a 10-digit number
      const phoneNumberRegex = /^[0-9]{10}$/;
      if (phoneNumber && !phoneNumberRegex.test(phoneNumber)) {
        document.getElementById("error3").textContent =
          "Phone number should be a 10-digit number.";
        isValid = false;
      }

      // Validate First Name: Only alphabets allowed
      const nameRegex = /^[A-Za-z]+$/;
      if (firstName && !nameRegex.test(firstName)) {
        document.getElementById("error4").textContent =
          "First name should only contain alphabets.";
        isValid = false;
      }

      // Validate Last Name: Only alphabets allowed
      if (lastName && !nameRegex.test(lastName)) {
        document.getElementById("error5").textContent =
          "Last name should only contain alphabets.";
        isValid = false;
      }

      // If all fields are valid, submit the form using fetch
      if (isValid) {
        // Auto-capitalize first letter of firstName and lastName
        const formattedFirstName =
          firstName.charAt(0).toUpperCase() + firstName.slice(1).toLowerCase();
        const formattedLastName =
          lastName.charAt(0).toUpperCase() + lastName.slice(1).toLowerCase();

        // Prepare form data object
        const formData = {
          username,
          phoneNumber,
          firstName: formattedFirstName,
          lastName: formattedLastName,
        };

        // Use fetch to send the form data to the server
        fetch("/editProfile", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData), // Send form data as JSON
        })
          .then((response) => {
            // Check if the response is OK (status code 200-299)
            if (response.ok) {
              console.log("Form submission successful");
              return response.json(); // Convert response to JSON
            } else {
              return response.json().then((data) => {
                // Handle validation or server errors
                alert(`Error: ${data.message || "Failed to update profile."}`);
                throw new Error(data.message || "Unknown error");
              });
            }
          })
          .then((data) => {
            // Show a success message using the toast
            showToast(data.message, 1);
            console.log("Redirecting to /userProfile...");
            window.location.href = "/userProfile"; // Correct redirection
          })
          .catch((error) => {
            console.error("Error:", error);
            showToast("Error updating profile", 0);
          });
      }
    });
});
  
</script>

<%- include("../partials/user/footer.ejs") %>
