<%- include("../partials/user/header.ejs")%>
<style>
  .container {
    max-width: 800px;
    padding: 20px;
  }
  
  h2 {
    font-size: 2.5rem;
    font-weight: bold;
    color: #333;
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .card {
    display: flex;
    flex-direction: row; /* Arrange image and details in a row */
    border-radius: 15px;
    border: none;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .card:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
  }
  
  .card img {
    width: 150px;
    height: 150px;
    object-fit: cover;
    border-radius: 15px;
  }
  
  .card-body {
    padding: 1.5rem;
    background: #f9f9f9;
    flex: 1; /* Ensures the content takes remaining space */
  }
  
  .card-title {
    font-size: 1.25rem;
    color: #333;
  }
  
  .text-primary {
    color: #007bff;
    font-weight: bold;
  }
  
  .text-success {
    color: #28a745;
    font-weight: bold;
  }
  
  .text-muted {
    color: #6c757d;
    font-size: 0.9rem;
  }
  
  .btn-primary {
    background-color: #007bff;
    border-color: #007bff;
    border-radius: 25px;
    font-weight: bold;
    padding: 0.5rem 1.5rem;
    transition: background-color 0.3s, border-color 0.3s;
  }
  
  .btn-primary:hover {
    background-color: #0056b3;
    border-color: #0056b3;
  }
  
  .order-date {
    font-size: 0.85rem;
    color: #888;
    margin-bottom: 1rem;
  }
  </style>
  
  <div class="container mt-4">
    <h2>Your Orders</h2>
    <% orders.forEach(order => { %>
    <div class="card shadow-sm mb-4">
      <img src="<%= order.cartItems[0].product.images[0] %>" alt="Product Image">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
          <h5 class="card-title mb-0">Order ID: <span class="text-primary"><%= order.orderNumber %></span></h5>
          <p class="order-date"><%= moment(order.orderDate).format("MMM Do, YYYY") %></p>
        </div>
        <h6 class="text-dark">Status: <span class="text-primary"><%= order.orderStatus %></span></h6>
        <h6 class="text-dark">Total: <span class="text-success">â‚¹<%= order.totalPrice %></span></h6>
        <h6 class="text-dark mt-3">Shipped To:</h6>
        <p class="text-muted mb-1"><%= order.shippingAddress.name %></p>
        <div class="mt-3">
          <a href="/orderDetails?id=<%= order._id %>" class="btn btn-primary">View Order</a>
        </div>
      </div>
    </div>
    <% }) %>
  </div>
  
  
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
   window.addEventListener("DOMContentLoaded", function () {
    const retrylink = document.getElementById("retrylink");
    retrylink.addEventListener("click", async (event) => {
  
        
      event.preventDefault();
      const orderId = retrylink.getAttribute("data-href");
     
      
      try {
        
        
        const response = await fetch("/retryPayment", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ orderId: orderId }),
        });
        const result = await response.json();
    
        
        if (response.ok) {
           
          const options = {
            key: result.razorpayKeyId, // Razorpay Key ID
            amount: result.amount, // Amount in paise (multiply by 100 for INR)
            currency: "INR",
            name: result.name, // Name of the customer
            order_id: result.razorpayOrderId, // Razorpay order ID
            handler: function (paymentResponse) {
              // Handle payment success
              verifyPayment(paymentResponse, result.orderId);
            },
            modal: {
              ondismiss: function () {
             
                // This triggers when the user closes the Razorpay modal (before payment)
                window.location.href = `/paymentFailed?orderId=${data.orderId}`; // Redirect to cancellation page
              },
            },
            prefill: {
              name: result.name,
              email: "<%= userDetails.email %>", // You can add dynamic email if available
              contact: "<%= userDetails.phone %>", // Dynamic contact number if available
            },
          };
          const razorpay = new Razorpay(options);
          razorpay.open();  // Trigger the Razorpay payment modal
        }else{
            alert(result.message || 'Failed to retry payment.');
        }
      } catch (error) {}
    });
    function verifyPayment(paymentResponse, orderId) {
    // Handle the verification logic, send the paymentResponse to your backend for verification
    const response = fetch('/verifyPayment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        razorpay_payment_id: paymentResponse.razorpay_payment_id,
        razorpay_order_id: paymentResponse.razorpay_order_id,
        razorpay_signature: paymentResponse.razorpay_signature,
        orderId: orderId
      })
    }).then(res => res.json())
      .then(data => {
        if (data.message === "Payment Successful and Order Updated!") {
            
            
          window.location.href = `/orderSuccess?orderId=${orderId}`; // Redirect to order success page
        } else {
        
          alert(data.message || 'Payment verification failed');
          window.location.href = `/paymentFailed?orderId=${data.orderId}`;
        }
      })
      .catch(err => {
        console.error('Error verifying payment:', err);
        alert('Payment verification failed');
      });
  }
  });
</script>
<%- include("../partials/user/footer.ejs")%>
