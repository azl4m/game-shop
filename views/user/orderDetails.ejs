<%- include("../partials/user/header.ejs")%>

<style>
  /* General Styles */
  body {
    font-family: 'Poppins', sans-serif;
    background-color: #f8f9fa;
  }

  .container {
    max-width: 1200px;
    margin: 2rem auto;
  }

  h2 {
    font-weight: 600;
    margin-bottom: 1.5rem;
  }

  /* Order Card Styles */
  .order-card {
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .order-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .order-info h5 {
    font-weight: 600;
    margin-bottom: 0.25rem;
  }

  .order-info p {
    margin-bottom: 0;
    color: #666;
  }

  .product-item {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
  }

  .product-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 8px;
    margin-right: 1rem;
  }

  .product-details h6 {
    font-weight: 500;
    margin-bottom: 0.25rem;
  }

  .product-details ul {
    list-style-type: none;
    padding: 0;
    margin: 0 0 0.5rem 0;
    font-size: 0.875rem;
  }

  .product-actions {
    margin-left: auto;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }

  .product-actions .btn {
    margin-bottom: 0.5rem;
  }

  /* Responsive Styles */
  @media (max-width: 767px) {
    .order-info {
      flex-direction: column;
      align-items: flex-start;
    }

    .order-info h5,
    .order-info p {
      margin-bottom: 0.5rem;
    }

    .product-item {
      flex-direction: column;
      align-items: flex-start;
    }

    .product-image {
      margin-right: 0;
      margin-bottom: 1rem;
    }

    .product-actions {
      margin-left: 0;
      margin-top: 1rem;
      align-items: flex-start;
    }

    .product-actions .btn {
      margin-right: 0.75rem;
    }
  }
</style>

<div class="container">
  <h2>Your Orders</h2>

  <% order.cartItems.forEach((item,i) => { %>

    <%if(item.orderStatus === "Delivered" && item.isReturned && item.returnAccept === "PENDING"){%>
    <div class="alert alert-warning mb-0">
      <h6 class="mb-0">Return Accept Pending</h6>
    </div>
    <%if(item.orderStatus ==="Delivered" && item.isReturned && item.returnAccept === "REJECTED"){%>
      <div class="alert alert-warning mb-0">
        <h6 class="mb-0">Sorry we couldnot accept your return request</h6>
      </div>
      <%}%>
    <%}%>
    <%if(item.isCancelled && item.cancelAccept === "PENDING"){%>
    <div class="alert alert-warning mb-0">
      <h6 class="mb-0">Cancel Accept Pending</h6>
    </div>
    <%}%>
    <%if(item.orderStatus !=="Delivered" && item.isCancelled && item.cancelAccept === "REJECTED"){%>
      <div class="alert alert-warning mb-0">
        <h6 class="mb-0">Sorry we couldnot accept your cancel request</h6>
      </div>
      <%}%>

  <div class="order-card">
    <div class="order-info">
      <div>
        <h5>Order #<%= order.orderNumber %></h5>
        <p><%= moment(order.orderDate).format("MMM Do, YYYY") %></p>
      </div>
      <div>
        <p>Total: ₹<%= order.totalPrice %></p>
        <p>Shipped to: <%= order.shippingAddress.name %></p>
      </div>
    </div>

    <div class="product-item">
      <img src="<%= item.product.images[0] %>" alt="Product Image" class="product-image">
      <div class="product-details">
        <h6><%= item.quantity %> x <%= item.product.productName %></h6>
        <ul>
          <li><b>Platform:</b> <%= item.platform %></li>
        </ul>
        <p><b>₹<%= item.price %></b></p>
      </div>
      <div class="product-actions">
        <a class="btn btn-primary" href="/trackItem?orderId=<%=order._id%>&cartItemIndex=<%=i%>">Track item</a>
        <% if (!item.isCancelled && item.orderStatus !== "Delivered" && item.orderStatus !== "Returned") { %>
          <a href="/requestCancel?orderid=<%= order._id %>&product=<%= item.product._id %>&platform=<%=item.platform%>" class="btn btn-danger">Cancel Product</a>
        <% } %>
        <% if (order.paymentStatus === "Failed") { %>
          <a href="/retryPayment?id=<%=order._id%>" id="retrylink" data-href="<%=order._id%>" class="btn btn-success">Pay Now</a>
        <% } %>
        <% if(item.orderStatus === "Delivered") { %>
          <a href="/downloadInvoice?orderId=<%=order._id%>&productId=<%=item.product._id%>&platform=<%=item.platform%>" class="btn btn-warning">Download Invoice</a>
          <a href="/addReview?productId=<%=item.product._id%>" class="btn btn-primary">Write a Review</a>
          <% if (!item.isReturned) { %>
            <a href="/requestReturn?orderid=<%= order._id %>&product=<%= item.product._id %>&platform=<%=item.platform%>" class="btn btn-danger">Request Return</a>
          <% } %>
        <% } %>
      </div>
    </div>

    <div class="alert alert-info mb-0">
      <h6 class="mb-0"><b><%= item.orderStatus === "Delivered" ? "Order Delivered" : item.orderStatus %></b></h6>
      <% if(item.orderStatus !== "Delivered" && item.orderStatus !== "Cancelled" && item.orderStatus !== "Returned"){ %>
        <p class="mb-0">Est. delivery between <%= moment(order.orderDate).add(5, 'days').format("MMM Do") %> – <%= moment(order.orderDate).add(9, 'days').format("MMM Do") %></p>
      <% } %>
    </div>
  </div>
  <% }) %>
</div>
<%- include("../partials/user/footer.ejs")%>


<script>
  window.addEventListener("DOMContentLoaded", function () {
    const retrylink = document.getElementById("retrylink");
    retrylink.addEventListener("click", async (event) => {
      event.preventDefault();
      const orderId = retrylink.getAttribute("data-href");

      try {
        const response = await fetch("/retryPayment", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ orderId: orderId }),
        });
        const result = await response.json();

        if (response.ok) {
          const options = {
            key: result.razorpayKeyId, // Razorpay Key ID
            amount: result.amount, // Amount in paise (multiply by 100 for INR)
            currency: "INR",
            name: result.name, // Name of the customer
            order_id: result.razorpayOrderId, // Razorpay order ID
            handler: function (paymentResponse) {
              // Handle payment success
              verifyPayment(paymentResponse, result.orderId);
            },
            modal: {
              ondismiss: function () {
                // This triggers when the user closes the Razorpay modal (before payment)
                window.location.href = `/paymentFailed?orderId=${data.orderId}`; // Redirect to cancellation page
              },
            },
            prefill: {
              name: result.name,
              email: "<%= userDetails.email %>", // You can add dynamic email if available
              contact: "<%= userDetails.phone %>", // Dynamic contact number if available
            },
          };
          const razorpay = new Razorpay(options);
          razorpay.open(); // Trigger the Razorpay payment modal
        } else {
          alert(result.message || "Failed to retry payment.");
        }
      } catch (error) {}
    });
    function verifyPayment(paymentResponse, orderId) {
      // Handle the verification logic, send the paymentResponse to your backend for verification
      const response = fetch("/verifyPayment", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          razorpay_payment_id: paymentResponse.razorpay_payment_id,
          razorpay_order_id: paymentResponse.razorpay_order_id,
          razorpay_signature: paymentResponse.razorpay_signature,
          orderId: orderId,
        }),
      })
        .then((res) => res.json())
        .then((data) => {
          if (data.message === "Payment Successful and Order Updated!") {
            window.location.href = `/orderSuccess?orderId=${orderId}`; // Redirect to order success page
          } else {
            alert(data.message || "Payment verification failed");
            window.location.href = `/paymentFailed?orderId=${data.orderId}`;
          }
        }) 
        .catch((err) => {
          console.error("Error verifying payment:", err);
          alert("Payment verification failed");
        });
    }
  });
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
