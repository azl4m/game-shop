<%- include("../partials/user/header.ejs")%>
<style>
  .order-failed-page {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f8f9fa;
    padding: 20px;
  }
  .order-failed-box {
    background-color: #fff;
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    text-align: center;
    animation: fadeInUp 0.5s ease-in-out;
    width: 100%;
    max-width: 600px;
  }
  .order-failed-icon {
    font-size: 50px;
    color: #dc3545;
    margin-bottom: 20px;
    animation: shake 0.5s ease;
  }
  .order-failed-title {
    font-size: 28px;
    color: #dc3545;
    font-weight: bold;
    margin-bottom: 20px;
  }
  .order-details {
    font-size: 16px;
    margin-bottom: 30px;
    color: #6c757d;
  }
  .btn-retry,
  .btn-products {
    padding: 12px 20px;
    font-size: 16px;
    transition: background-color 0.3s ease;
  }
  .btn-retry {
    background-color: #28a745;
    color: #fff;
  }
  .btn-products {
    background-color: #007bff;
    color: #fff;
  }
  .btn-retry:hover {
    background-color: #218838;
  }
  .btn-products:hover {
    background-color: #0069d9;
  }

  /* Keyframes for subtle animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes shake {
    0%,
    100% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(-10px);
    }
    50% {
      transform: translateX(10px);
    }
    75% {
      transform: translateX(-10px);
    }
  }

  /* Responsive */
  @media (max-width: 576px) {
    .order-failed-box {
      padding: 20px;
    }
    .order-failed-title {
      font-size: 24px;
    }
    .btn-retry,
    .btn-products {
      padding: 10px 15px;
      font-size: 14px;
    }
  }
</style>

<div class="order-failed-page">
  <div class="order-failed-box">
    <i class="fas fa-exclamation-circle order-failed-icon"></i>
    <!-- Error icon -->
    <h1 class="order-failed-title">Payment Failed</h1>
    <p class="order-details">
      We're sorry, your payment for order
      <strong><%= order.orderNumber %></strong> could not be completed.
    </p>
    <p class="order-details">Total Amount: â‚¹ <%= order.totalPrice %></p>

    <div class="mt-4">
      <a
        href="/retryPayment?orderId=<%= order._id %>"
        data-href="<%= order._id %>"
        class="btn btn-retry"
        id="retrylink"
        >Retry Payment</a
      >
      <a href="/products" class="btn btn-products ms-3">Back to Products</a>
    </div>
  </div>
</div>
<script>
  window.addEventListener("DOMContentLoaded", function () {
    const retrylink = document.getElementById("retrylink");
    retrylink.addEventListener("click", async (event) => {
  
        
      event.preventDefault();
      const orderId = retrylink.getAttribute("data-href");
     
      
      try {
        
        
        const response = await fetch("/retryPayment", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ orderId: orderId }),
        });
        const result = await response.json();
    
        
        if (response.ok) {
           
          const options = {
            key: result.razorpayKeyId, // Razorpay Key ID
            amount: result.amount, // Amount in paise (multiply by 100 for INR)
            currency: "INR",
            name: result.name, // Name of the customer
            order_id: result.razorpayOrderId, // Razorpay order ID
            handler: function (paymentResponse) {
              // Handle payment success
              verifyPayment(paymentResponse, result.orderId);
            },
            modal: {
              ondismiss: function () {
             
                // This triggers when the user closes the Razorpay modal (before payment)
                window.location.href = `/paymentFailed?orderId=${data.orderId}`; // Redirect to cancellation page
              },
            },
            prefill: {
              name: result.name,
              email: "<%= userDetails.email %>", // You can add dynamic email if available
              contact: "<%= userDetails.phone %>", // Dynamic contact number if available
            },
          };
          const razorpay = new Razorpay(options);
          razorpay.open();  // Trigger the Razorpay payment modal
        }else{
            alert(result.message || 'Failed to retry payment.');
        }
      } catch (error) {}
    });
    function verifyPayment(paymentResponse, orderId) {
    // Handle the verification logic, send the paymentResponse to your backend for verification
    const response = fetch('/verifyPayment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        razorpay_payment_id: paymentResponse.razorpay_payment_id,
        razorpay_order_id: paymentResponse.razorpay_order_id,
        razorpay_signature: paymentResponse.razorpay_signature,
        orderId: orderId
      })
    }).then(res => res.json())
      .then(data => {
        if (data.message === "Payment Successful and Order Updated!") {
            
            
          window.location.href = `/orderSuccess?orderId=${orderId}`; // Redirect to order success page
        } else {
        
          alert(data.message || 'Payment verification failed');
          window.location.href = `/paymentFailed?orderId=${data.orderId}`;
        }
      })
      .catch(err => {
        console.error('Error verifying payment:', err);
        alert('Payment verification failed');
      });
  }
  });
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<%- include("../partials/user/footer.ejs")%>
