<%- include("../partials/user/header.ejs")%>
<link
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
  rel="stylesheet"
/>
<!-- Correct FontAwesome -->
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
  rel="stylesheet"
/>
<style>
  /* Custom CSS for styling */
  .review-container {
    max-width: 600px;
    margin: 50px auto;
    background: #f8f9fa;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .review-header {
    text-align: center;
    margin-bottom: 20px;
  }

  .star-rating {
    text-align: center;
    font-size: 30px;
    margin-bottom: 20px;
  }

  .star-rating i {
    color: #ccc;
    cursor: pointer;
  }

  .star-rating i.selected {
    color: #f39c12;
  }

  .btn-submit {
    background-color: #007bff;
    color: white;
  }

  .btn-submit:hover {
    background-color: #0056b3;
  }
  /* Media Queries for responsiveness */
  @media (max-width: 768px) {
    .review-container {
      padding: 15px;
      margin-top: 20px;
    }

    .star-rating {
      font-size: 24px;
    }

    .btn-submit {
      font-size: 14px;
    }
  }

  @media (max-width: 480px) {
    .review-container {
      padding: 10px;
      margin-top: 15px;
    }

    .star-rating {
      font-size: 20px;
    }

    .btn-submit {
      font-size: 12px;
    }
  }
</style>

<div class="review-container">
  <!-- Flash messages -->
  <% if (messages.success) { %>
  <div class="alert alert-success"><%= messages.success %></div>
  <% } %> <% if (messages.error) { %>
  <div class="alert alert-danger"><%= messages.error %></div>
  <% } %>

  <h2 class="review-header">Submit Your Review</h2>

  <!-- Star Rating Section -->
  <div class="star-rating" id="starRating">
    <i class="far fa-star" data-rating="1"></i>
    <i class="far fa-star" data-rating="2"></i>
    <i class="far fa-star" data-rating="3"></i>
    <i class="far fa-star" data-rating="4"></i>
    <i class="far fa-star" data-rating="5"></i>
  </div>

  <!-- Review Form -->
  <form id="reviewForm" action="/submitReview" method="POST">
    <div class="mb-3">
      <label for="reviewComment" class="form-label">Your Review</label>
      <textarea
        class="form-control"
        id="reviewComment"
        name="comment"
        rows="4"
        placeholder="Write your review here..."
        required
      > <%= existingReview ? existingReview.comment : '' %></textarea>
    </div>

    <input type="hidden" name="rating" id="ratingValue" value="<%= existingReview ? existingReview.rating : '' %>" />
    <input name="productId" type="text" hidden value="<%=product._id%>" />
    <!-- Submit Button -->
    <button type="submit" class="btn btn-submit w-100">Submit Review</button>
  </form>
</div>
<script>
  window.addEventListener("DOMContentLoaded", function () {
    const reviewForm = document.getElementById("reviewForm");
    const reviewComment = document.getElementById("reviewComment");
    // JavaScript to handle star rating selection
    const stars = document.querySelectorAll(".star-rating .fa-star");
    const ratingInput = document.getElementById("ratingValue");
    // Set existing rating stars if available
    const existingRating = ratingInput.value;
    if (existingRating) {
      for (let i = 0; i < existingRating; i++) {
        stars[i].classList.add('selected',"fas");
        stars[i].classList.remove("far")
      }
    }

    let selectedRating = 0;
    stars.forEach((star) => {
      star.addEventListener("click", () => {
        const rating = star.getAttribute("data-rating");
        selectedRating = rating;
        // Reset all stars to unfilled
        stars.forEach((s) => {
          s.classList.remove("fas", "selected");
          s.classList.add("far");
        });

        // Add selected class to clicked star and previous stars
        for (let i = 0; i < rating; i++) {
          stars[i].classList.remove("far");
          stars[i].classList.add("fas", "selected");
        }

        // Set the rating value to the hidden input
        ratingInput.value = rating;
      });

      // Optional: Handle hover effect
      star.addEventListener("mouseover", () => {
        stars.forEach((s) => s.classList.remove("selected"));
        const hoverRating = star.getAttribute("data-rating");
        for (let i = 0; i < hoverRating; i++) {
          stars[i].classList.add("selected");
        }
      });

      // Optional: Remove hover effect when not hovering
      star.addEventListener("mouseout", () => {
        const currentRating = ratingInput.value;
        stars.forEach((s) => s.classList.remove("selected"));
        for (let i = 0; i < currentRating; i++) {
          stars[i].classList.add("selected");
        }
      });
    });

    // Regular expression for allowed special characters (! and .)
    const validCommentRegex = /^[a-zA-Z0-9\s!.\-]+$/;

    // Word limit for the comment
    const maxWords = 60;

    // Handle form submission
    reviewForm.addEventListener("submit", (e) => {
      // Prevent form submission if conditions are not met
      let errors = [];

      // Check if a star rating is selected
      if (!selectedRating) {
        errors.push("Please select a star rating.");
      }

      // Check comment validity
      const comment = reviewComment.value.trim();
      const wordCount = comment.split(/\s+/).length;

      // Validate comment field for special characters
      if (!validCommentRegex.test(comment)) {
        errors.push(
          "Comment contains invalid characters. Only ! and . are allowed."
        );
      }

      // Validate word count
      if (wordCount > maxWords) {
        errors.push(
          `Comment exceeds the word limit of ${maxWords} words. You have ${wordCount} words.`
        );
      }

      // If there are errors, show alerts and prevent submission
      if (errors.length > 0) {
        e.preventDefault();
        alert(errors.join("\n"));
      }
    });
  });
</script>

<%- include("../partials/user/footer.ejs")%>
